
quickSort(array<T> &a)
{
	quickSort(a, 0, a.length);
    quickSort(array<T> &a, int i, int n)
    {
    	if (n <= 1) return;
        T pi = a[i + rand()%n];
        int p = i-1, j = i, q = i+n;
        while (j < q)
        {
        	int comp = compare(a[j], pi);
            if (comp < 0)
			{
				a.swap(j++, ++p);      // move to beginning of array
			} 
			else if (comp > 0)
			{
				a.swap(j, --q);        // move to end of array
			}
			else
			{
				j++;                   // keep in the middle             
			}
		}
	}
}
// a[i..p]<pi, a[p+1..q-1]=pi, a[q..i+n-1]>pi
quickSort(a, i, p-i+1);
quickSort(a, q, n-(q-i));
